// <auto-generated />
using EcoFarmAdmin;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoFarmAdmin.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("EcoFarmAdmin.Domain.DevObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DevObjects", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EcoFarmAdmin.Domain.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Commentary")
                        .HasColumnType("TEXT");

                    b.Property<float>("Order")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Levels", (string)null);
                });

            modelBuilder.Entity("EcoFarmAdmin.Domain.Product", b =>
                {
                    b.HasBaseType("EcoFarmAdmin.Domain.DevObject");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("EcoFarmAdmin.Domain.Tree", b =>
                {
                    b.HasBaseType("EcoFarmAdmin.Domain.DevObject");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ProductId");

                    b.ToTable("Trees", (string)null);
                });

            modelBuilder.Entity("EcoFarmAdmin.Domain.Product", b =>
                {
                    b.HasOne("EcoFarmAdmin.Domain.DevObject", null)
                        .WithOne()
                        .HasForeignKey("EcoFarmAdmin.Domain.Product", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcoFarmAdmin.Domain.Tree", b =>
                {
                    b.HasOne("EcoFarmAdmin.Domain.DevObject", null)
                        .WithOne()
                        .HasForeignKey("EcoFarmAdmin.Domain.Tree", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoFarmAdmin.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
