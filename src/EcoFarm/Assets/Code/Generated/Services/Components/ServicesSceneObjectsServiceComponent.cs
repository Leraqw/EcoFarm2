//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity sceneObjectsServiceEntity { get { return GetGroup(ServicesMatcher.SceneObjectsService).GetSingleEntity(); } }
    public Code.ECS.Components.SceneObjectsServiceComponent sceneObjectsService { get { return sceneObjectsServiceEntity.sceneObjectsService; } }
    public bool hasSceneObjectsService { get { return sceneObjectsServiceEntity != null; } }

    public ServicesEntity SetSceneObjectsService(Code.Services.Interfaces.ISpawnPointsService newValue) {
        if (hasSceneObjectsService) {
            throw new Entitas.EntitasException("Could not set SceneObjectsService!\n" + this + " already has an entity with Code.ECS.Components.SceneObjectsServiceComponent!",
                "You should check if the context already has a sceneObjectsServiceEntity before setting it or use context.ReplaceSceneObjectsService().");
        }
        var entity = CreateEntity();
        entity.AddSceneObjectsService(newValue);
        return entity;
    }

    public void ReplaceSceneObjectsService(Code.Services.Interfaces.ISpawnPointsService newValue) {
        var entity = sceneObjectsServiceEntity;
        if (entity == null) {
            entity = SetSceneObjectsService(newValue);
        } else {
            entity.ReplaceSceneObjectsService(newValue);
        }
    }

    public void RemoveSceneObjectsService() {
        sceneObjectsServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public Code.ECS.Components.SceneObjectsServiceComponent sceneObjectsService { get { return (Code.ECS.Components.SceneObjectsServiceComponent)GetComponent(ServicesComponentsLookup.SceneObjectsService); } }
    public bool hasSceneObjectsService { get { return HasComponent(ServicesComponentsLookup.SceneObjectsService); } }

    public void AddSceneObjectsService(Code.Services.Interfaces.ISpawnPointsService newValue) {
        var index = ServicesComponentsLookup.SceneObjectsService;
        var component = (Code.ECS.Components.SceneObjectsServiceComponent)CreateComponent(index, typeof(Code.ECS.Components.SceneObjectsServiceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSceneObjectsService(Code.Services.Interfaces.ISpawnPointsService newValue) {
        var index = ServicesComponentsLookup.SceneObjectsService;
        var component = (Code.ECS.Components.SceneObjectsServiceComponent)CreateComponent(index, typeof(Code.ECS.Components.SceneObjectsServiceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneObjectsService() {
        RemoveComponent(ServicesComponentsLookup.SceneObjectsService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherSceneObjectsService;

    public static Entitas.IMatcher<ServicesEntity> SceneObjectsService {
        get {
            if (_matcherSceneObjectsService == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.SceneObjectsService);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherSceneObjectsService = matcher;
            }

            return _matcherSceneObjectsService;
        }
    }
}
