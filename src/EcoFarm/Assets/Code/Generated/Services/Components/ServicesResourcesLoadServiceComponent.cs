//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity resourcesLoadServiceEntity { get { return GetGroup(ServicesMatcher.ResourcesLoadService).GetSingleEntity(); } }
    public Code.ECS.Components.ResourcesLoadService resourcesLoadService { get { return resourcesLoadServiceEntity.resourcesLoadService; } }
    public bool hasResourcesLoadService { get { return resourcesLoadServiceEntity != null; } }

    public ServicesEntity SetResourcesLoadService(Code.Services.Interfaces.IResourcesLoadService newValue) {
        if (hasResourcesLoadService) {
            throw new Entitas.EntitasException("Could not set ResourcesLoadService!\n" + this + " already has an entity with Code.ECS.Components.ResourcesLoadService!",
                "You should check if the context already has a resourcesLoadServiceEntity before setting it or use context.ReplaceResourcesLoadService().");
        }
        var entity = CreateEntity();
        entity.AddResourcesLoadService(newValue);
        return entity;
    }

    public void ReplaceResourcesLoadService(Code.Services.Interfaces.IResourcesLoadService newValue) {
        var entity = resourcesLoadServiceEntity;
        if (entity == null) {
            entity = SetResourcesLoadService(newValue);
        } else {
            entity.ReplaceResourcesLoadService(newValue);
        }
    }

    public void RemoveResourcesLoadService() {
        resourcesLoadServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public Code.ECS.Components.ResourcesLoadService resourcesLoadService { get { return (Code.ECS.Components.ResourcesLoadService)GetComponent(ServicesComponentsLookup.ResourcesLoadService); } }
    public bool hasResourcesLoadService { get { return HasComponent(ServicesComponentsLookup.ResourcesLoadService); } }

    public void AddResourcesLoadService(Code.Services.Interfaces.IResourcesLoadService newValue) {
        var index = ServicesComponentsLookup.ResourcesLoadService;
        var component = (Code.ECS.Components.ResourcesLoadService)CreateComponent(index, typeof(Code.ECS.Components.ResourcesLoadService));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceResourcesLoadService(Code.Services.Interfaces.IResourcesLoadService newValue) {
        var index = ServicesComponentsLookup.ResourcesLoadService;
        var component = (Code.ECS.Components.ResourcesLoadService)CreateComponent(index, typeof(Code.ECS.Components.ResourcesLoadService));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveResourcesLoadService() {
        RemoveComponent(ServicesComponentsLookup.ResourcesLoadService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherResourcesLoadService;

    public static Entitas.IMatcher<ServicesEntity> ResourcesLoadService {
        get {
            if (_matcherResourcesLoadService == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.ResourcesLoadService);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherResourcesLoadService = matcher;
            }

            return _matcherResourcesLoadService;
        }
    }
}
