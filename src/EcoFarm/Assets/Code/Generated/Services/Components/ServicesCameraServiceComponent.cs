//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity cameraServiceEntity { get { return GetGroup(ServicesMatcher.CameraService).GetSingleEntity(); } }
    public Code.ECS.Components.CameraServiceComponent cameraService { get { return cameraServiceEntity.cameraService; } }
    public bool hasCameraService { get { return cameraServiceEntity != null; } }

    public ServicesEntity SetCameraService(Code.Services.Interfaces.ICameraService newValue) {
        if (hasCameraService) {
            throw new Entitas.EntitasException("Could not set CameraService!\n" + this + " already has an entity with Code.ECS.Components.CameraServiceComponent!",
                "You should check if the context already has a cameraServiceEntity before setting it or use context.ReplaceCameraService().");
        }
        var entity = CreateEntity();
        entity.AddCameraService(newValue);
        return entity;
    }

    public void ReplaceCameraService(Code.Services.Interfaces.ICameraService newValue) {
        var entity = cameraServiceEntity;
        if (entity == null) {
            entity = SetCameraService(newValue);
        } else {
            entity.ReplaceCameraService(newValue);
        }
    }

    public void RemoveCameraService() {
        cameraServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public Code.ECS.Components.CameraServiceComponent cameraService { get { return (Code.ECS.Components.CameraServiceComponent)GetComponent(ServicesComponentsLookup.CameraService); } }
    public bool hasCameraService { get { return HasComponent(ServicesComponentsLookup.CameraService); } }

    public void AddCameraService(Code.Services.Interfaces.ICameraService newValue) {
        var index = ServicesComponentsLookup.CameraService;
        var component = (Code.ECS.Components.CameraServiceComponent)CreateComponent(index, typeof(Code.ECS.Components.CameraServiceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCameraService(Code.Services.Interfaces.ICameraService newValue) {
        var index = ServicesComponentsLookup.CameraService;
        var component = (Code.ECS.Components.CameraServiceComponent)CreateComponent(index, typeof(Code.ECS.Components.CameraServiceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCameraService() {
        RemoveComponent(ServicesComponentsLookup.CameraService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherCameraService;

    public static Entitas.IMatcher<ServicesEntity> CameraService {
        get {
            if (_matcherCameraService == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.CameraService);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherCameraService = matcher;
            }

            return _matcherCameraService;
        }
    }
}
