//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity sceneTransferServiceEntity { get { return GetGroup(ServicesMatcher.SceneTransferService).GetSingleEntity(); } }
    public EcoFarm.SceneTransferServiceComponent sceneTransferService { get { return sceneTransferServiceEntity.sceneTransferService; } }
    public bool hasSceneTransferService { get { return sceneTransferServiceEntity != null; } }

    public ServicesEntity SetSceneTransferService(EcoFarm.ISceneTransferService newValue) {
        if (hasSceneTransferService) {
            throw new Entitas.EntitasException("Could not set SceneTransferService!\n" + this + " already has an entity with EcoFarm.SceneTransferServiceComponent!",
                "You should check if the context already has a sceneTransferServiceEntity before setting it or use context.ReplaceSceneTransferService().");
        }
        var entity = CreateEntity();
        entity.AddSceneTransferService(newValue);
        return entity;
    }

    public void ReplaceSceneTransferService(EcoFarm.ISceneTransferService newValue) {
        var entity = sceneTransferServiceEntity;
        if (entity == null) {
            entity = SetSceneTransferService(newValue);
        } else {
            entity.ReplaceSceneTransferService(newValue);
        }
    }

    public void RemoveSceneTransferService() {
        sceneTransferServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public EcoFarm.SceneTransferServiceComponent sceneTransferService { get { return (EcoFarm.SceneTransferServiceComponent)GetComponent(ServicesComponentsLookup.SceneTransferService); } }
    public bool hasSceneTransferService { get { return HasComponent(ServicesComponentsLookup.SceneTransferService); } }

    public void AddSceneTransferService(EcoFarm.ISceneTransferService newValue) {
        var index = ServicesComponentsLookup.SceneTransferService;
        var component = (EcoFarm.SceneTransferServiceComponent)CreateComponent(index, typeof(EcoFarm.SceneTransferServiceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSceneTransferService(EcoFarm.ISceneTransferService newValue) {
        var index = ServicesComponentsLookup.SceneTransferService;
        var component = (EcoFarm.SceneTransferServiceComponent)CreateComponent(index, typeof(EcoFarm.SceneTransferServiceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneTransferService() {
        RemoveComponent(ServicesComponentsLookup.SceneTransferService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherSceneTransferService;

    public static Entitas.IMatcher<ServicesEntity> SceneTransferService {
        get {
            if (_matcherSceneTransferService == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.SceneTransferService);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherSceneTransferService = matcher;
            }

            return _matcherSceneTransferService;
        }
    }
}
