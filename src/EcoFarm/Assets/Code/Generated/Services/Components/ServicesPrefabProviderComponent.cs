//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity prefabProviderEntity { get { return GetGroup(ServicesMatcher.PrefabProvider).GetSingleEntity(); } }
    public EcoFarm.PrefabProviderComponent prefabProvider { get { return prefabProviderEntity.prefabProvider; } }
    public bool hasPrefabProvider { get { return prefabProviderEntity != null; } }

    public ServicesEntity SetPrefabProvider(EcoFarm.IPrefabDataProvider newValue) {
        if (hasPrefabProvider) {
            throw new Entitas.EntitasException("Could not set PrefabProvider!\n" + this + " already has an entity with EcoFarm.PrefabProviderComponent!",
                "You should check if the context already has a prefabProviderEntity before setting it or use context.ReplacePrefabProvider().");
        }
        var entity = CreateEntity();
        entity.AddPrefabProvider(newValue);
        return entity;
    }

    public void ReplacePrefabProvider(EcoFarm.IPrefabDataProvider newValue) {
        var entity = prefabProviderEntity;
        if (entity == null) {
            entity = SetPrefabProvider(newValue);
        } else {
            entity.ReplacePrefabProvider(newValue);
        }
    }

    public void RemovePrefabProvider() {
        prefabProviderEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public EcoFarm.PrefabProviderComponent prefabProvider { get { return (EcoFarm.PrefabProviderComponent)GetComponent(ServicesComponentsLookup.PrefabProvider); } }
    public bool hasPrefabProvider { get { return HasComponent(ServicesComponentsLookup.PrefabProvider); } }

    public void AddPrefabProvider(EcoFarm.IPrefabDataProvider newValue) {
        var index = ServicesComponentsLookup.PrefabProvider;
        var component = (EcoFarm.PrefabProviderComponent)CreateComponent(index, typeof(EcoFarm.PrefabProviderComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePrefabProvider(EcoFarm.IPrefabDataProvider newValue) {
        var index = ServicesComponentsLookup.PrefabProvider;
        var component = (EcoFarm.PrefabProviderComponent)CreateComponent(index, typeof(EcoFarm.PrefabProviderComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePrefabProvider() {
        RemoveComponent(ServicesComponentsLookup.PrefabProvider);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherPrefabProvider;

    public static Entitas.IMatcher<ServicesEntity> PrefabProvider {
        get {
            if (_matcherPrefabProvider == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.PrefabProvider);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherPrefabProvider = matcher;
            }

            return _matcherPrefabProvider;
        }
    }
}
