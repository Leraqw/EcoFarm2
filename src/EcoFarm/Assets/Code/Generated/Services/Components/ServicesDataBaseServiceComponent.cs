//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity dataBaseServiceEntity { get { return GetGroup(ServicesMatcher.DataBaseService).GetSingleEntity(); } }
    public Code.ECS.Components.DataBaseServiceComponent dataBaseService { get { return dataBaseServiceEntity.dataBaseService; } }
    public bool hasDataBaseService { get { return dataBaseServiceEntity != null; } }

    public ServicesEntity SetDataBaseService(Code.Services.Interfaces.IDataBaseService newValue) {
        if (hasDataBaseService) {
            throw new Entitas.EntitasException("Could not set DataBaseService!\n" + this + " already has an entity with Code.ECS.Components.DataBaseServiceComponent!",
                "You should check if the context already has a dataBaseServiceEntity before setting it or use context.ReplaceDataBaseService().");
        }
        var entity = CreateEntity();
        entity.AddDataBaseService(newValue);
        return entity;
    }

    public void ReplaceDataBaseService(Code.Services.Interfaces.IDataBaseService newValue) {
        var entity = dataBaseServiceEntity;
        if (entity == null) {
            entity = SetDataBaseService(newValue);
        } else {
            entity.ReplaceDataBaseService(newValue);
        }
    }

    public void RemoveDataBaseService() {
        dataBaseServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public Code.ECS.Components.DataBaseServiceComponent dataBaseService { get { return (Code.ECS.Components.DataBaseServiceComponent)GetComponent(ServicesComponentsLookup.DataBaseService); } }
    public bool hasDataBaseService { get { return HasComponent(ServicesComponentsLookup.DataBaseService); } }

    public void AddDataBaseService(Code.Services.Interfaces.IDataBaseService newValue) {
        var index = ServicesComponentsLookup.DataBaseService;
        var component = (Code.ECS.Components.DataBaseServiceComponent)CreateComponent(index, typeof(Code.ECS.Components.DataBaseServiceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDataBaseService(Code.Services.Interfaces.IDataBaseService newValue) {
        var index = ServicesComponentsLookup.DataBaseService;
        var component = (Code.ECS.Components.DataBaseServiceComponent)CreateComponent(index, typeof(Code.ECS.Components.DataBaseServiceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDataBaseService() {
        RemoveComponent(ServicesComponentsLookup.DataBaseService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherDataBaseService;

    public static Entitas.IMatcher<ServicesEntity> DataBaseService {
        get {
            if (_matcherDataBaseService == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.DataBaseService);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherDataBaseService = matcher;
            }

            return _matcherDataBaseService;
        }
    }
}
