//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public NeededComponent needed { get { return (NeededComponent)GetComponent(PlayerComponentsLookup.Needed); } }
    public bool hasNeeded { get { return HasComponent(PlayerComponentsLookup.Needed); } }

    public void AddNeeded(Code.NeededComponent newValue) {
        var index = PlayerComponentsLookup.Needed;
        var component = (NeededComponent)CreateComponent(index, typeof(NeededComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceNeeded(Code.NeededComponent newValue) {
        var index = PlayerComponentsLookup.Needed;
        var component = (NeededComponent)CreateComponent(index, typeof(NeededComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveNeeded() {
        RemoveComponent(PlayerComponentsLookup.Needed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherNeeded;

    public static Entitas.IMatcher<PlayerEntity> Needed {
        get {
            if (_matcherNeeded == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.Needed);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherNeeded = matcher;
            }

            return _matcherNeeded;
        }
    }
}
