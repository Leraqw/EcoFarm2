//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public UnlockedLevelsCountComponent unlockedLevelsCount { get { return (UnlockedLevelsCountComponent)GetComponent(PlayerComponentsLookup.UnlockedLevelsCount); } }
    public bool hasUnlockedLevelsCount { get { return HasComponent(PlayerComponentsLookup.UnlockedLevelsCount); } }

    public void AddUnlockedLevelsCount(Code.UnlockedLevelsCountComponent newValue) {
        var index = PlayerComponentsLookup.UnlockedLevelsCount;
        var component = (UnlockedLevelsCountComponent)CreateComponent(index, typeof(UnlockedLevelsCountComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUnlockedLevelsCount(Code.UnlockedLevelsCountComponent newValue) {
        var index = PlayerComponentsLookup.UnlockedLevelsCount;
        var component = (UnlockedLevelsCountComponent)CreateComponent(index, typeof(UnlockedLevelsCountComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUnlockedLevelsCount() {
        RemoveComponent(PlayerComponentsLookup.UnlockedLevelsCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherUnlockedLevelsCount;

    public static Entitas.IMatcher<PlayerEntity> UnlockedLevelsCount {
        get {
            if (_matcherUnlockedLevelsCount == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.UnlockedLevelsCount);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherUnlockedLevelsCount = matcher;
            }

            return _matcherUnlockedLevelsCount;
        }
    }
}
