//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerContext {

    public PlayerEntity currentPlayerEntity { get { return GetGroup(PlayerMatcher.CurrentPlayer).GetSingleEntity(); } }
    public CurrentPlayerComponent currentPlayer { get { return currentPlayerEntity.currentPlayer; } }
    public bool hasCurrentPlayer { get { return currentPlayerEntity != null; } }

    public PlayerEntity SetCurrentPlayer(Code.CurrentPlayerComponent newValue) {
        if (hasCurrentPlayer) {
            throw new Entitas.EntitasException("Could not set CurrentPlayer!\n" + this + " already has an entity with CurrentPlayerComponent!",
                "You should check if the context already has a currentPlayerEntity before setting it or use context.ReplaceCurrentPlayer().");
        }
        var entity = CreateEntity();
        entity.AddCurrentPlayer(newValue);
        return entity;
    }

    public void ReplaceCurrentPlayer(Code.CurrentPlayerComponent newValue) {
        var entity = currentPlayerEntity;
        if (entity == null) {
            entity = SetCurrentPlayer(newValue);
        } else {
            entity.ReplaceCurrentPlayer(newValue);
        }
    }

    public void RemoveCurrentPlayer() {
        currentPlayerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public CurrentPlayerComponent currentPlayer { get { return (CurrentPlayerComponent)GetComponent(PlayerComponentsLookup.CurrentPlayer); } }
    public bool hasCurrentPlayer { get { return HasComponent(PlayerComponentsLookup.CurrentPlayer); } }

    public void AddCurrentPlayer(Code.CurrentPlayerComponent newValue) {
        var index = PlayerComponentsLookup.CurrentPlayer;
        var component = (CurrentPlayerComponent)CreateComponent(index, typeof(CurrentPlayerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentPlayer(Code.CurrentPlayerComponent newValue) {
        var index = PlayerComponentsLookup.CurrentPlayer;
        var component = (CurrentPlayerComponent)CreateComponent(index, typeof(CurrentPlayerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentPlayer() {
        RemoveComponent(PlayerComponentsLookup.CurrentPlayer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherCurrentPlayer;

    public static Entitas.IMatcher<PlayerEntity> CurrentPlayer {
        get {
            if (_matcherCurrentPlayer == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.CurrentPlayer);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherCurrentPlayer = matcher;
            }

            return _matcherCurrentPlayer;
        }
    }
}
