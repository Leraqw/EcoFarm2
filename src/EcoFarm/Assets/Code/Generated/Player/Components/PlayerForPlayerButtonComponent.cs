//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public ForPlayerButtonComponent forPlayerButton { get { return (ForPlayerButtonComponent)GetComponent(PlayerComponentsLookup.ForPlayerButton); } }
    public bool hasForPlayerButton { get { return HasComponent(PlayerComponentsLookup.ForPlayerButton); } }

    public void AddForPlayerButton(Code.ForPlayerButtonComponent newValue) {
        var index = PlayerComponentsLookup.ForPlayerButton;
        var component = (ForPlayerButtonComponent)CreateComponent(index, typeof(ForPlayerButtonComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceForPlayerButton(Code.ForPlayerButtonComponent newValue) {
        var index = PlayerComponentsLookup.ForPlayerButton;
        var component = (ForPlayerButtonComponent)CreateComponent(index, typeof(ForPlayerButtonComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveForPlayerButton() {
        RemoveComponent(PlayerComponentsLookup.ForPlayerButton);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherForPlayerButton;

    public static Entitas.IMatcher<PlayerEntity> ForPlayerButton {
        get {
            if (_matcherForPlayerButton == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.ForPlayerButton);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherForPlayerButton = matcher;
            }

            return _matcherForPlayerButton;
        }
    }
}
