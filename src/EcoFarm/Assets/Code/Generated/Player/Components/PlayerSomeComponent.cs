//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public SomeComponent some { get { return (SomeComponent)GetComponent(PlayerComponentsLookup.Some); } }
    public bool hasSome { get { return HasComponent(PlayerComponentsLookup.Some); } }

    public void AddSome(Code.SomeComponent newValue) {
        var index = PlayerComponentsLookup.Some;
        var component = (SomeComponent)CreateComponent(index, typeof(SomeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSome(Code.SomeComponent newValue) {
        var index = PlayerComponentsLookup.Some;
        var component = (SomeComponent)CreateComponent(index, typeof(SomeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSome() {
        RemoveComponent(PlayerComponentsLookup.Some);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherSome;

    public static Entitas.IMatcher<PlayerEntity> Some {
        get {
            if (_matcherSome == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.Some);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherSome = matcher;
            }

            return _matcherSome;
        }
    }
}
