//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public Code.Global.PlayerContext.Components.NameComponent name { get { return (Code.Global.PlayerContext.Components.NameComponent)GetComponent(PlayerComponentsLookup.Name); } }
    public bool hasName { get { return HasComponent(PlayerComponentsLookup.Name); } }

    public void AddName(string newValue) {
        var index = PlayerComponentsLookup.Name;
        var component = (Code.Global.PlayerContext.Components.NameComponent)CreateComponent(index, typeof(Code.Global.PlayerContext.Components.NameComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceName(string newValue) {
        var index = PlayerComponentsLookup.Name;
        var component = (Code.Global.PlayerContext.Components.NameComponent)CreateComponent(index, typeof(Code.Global.PlayerContext.Components.NameComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveName() {
        RemoveComponent(PlayerComponentsLookup.Name);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherName;

    public static Entitas.IMatcher<PlayerEntity> Name {
        get {
            if (_matcherName == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.Name);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherName = matcher;
            }

            return _matcherName;
        }
    }
}
