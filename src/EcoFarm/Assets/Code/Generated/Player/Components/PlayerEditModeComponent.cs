//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerContext {

    public PlayerEntity editModeEntity { get { return GetGroup(PlayerMatcher.EditMode).GetSingleEntity(); } }
    public EcoFarm.EditModeComponent editMode { get { return editModeEntity.editMode; } }
    public bool hasEditMode { get { return editModeEntity != null; } }

    public PlayerEntity SetEditMode(bool newValue) {
        if (hasEditMode) {
            throw new Entitas.EntitasException("Could not set EditMode!\n" + this + " already has an entity with EcoFarm.EditModeComponent!",
                "You should check if the context already has a editModeEntity before setting it or use context.ReplaceEditMode().");
        }
        var entity = CreateEntity();
        entity.AddEditMode(newValue);
        return entity;
    }

    public void ReplaceEditMode(bool newValue) {
        var entity = editModeEntity;
        if (entity == null) {
            entity = SetEditMode(newValue);
        } else {
            entity.ReplaceEditMode(newValue);
        }
    }

    public void RemoveEditMode() {
        editModeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public EcoFarm.EditModeComponent editMode { get { return (EcoFarm.EditModeComponent)GetComponent(PlayerComponentsLookup.EditMode); } }
    public bool hasEditMode { get { return HasComponent(PlayerComponentsLookup.EditMode); } }

    public void AddEditMode(bool newValue) {
        var index = PlayerComponentsLookup.EditMode;
        var component = (EcoFarm.EditModeComponent)CreateComponent(index, typeof(EcoFarm.EditModeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEditMode(bool newValue) {
        var index = PlayerComponentsLookup.EditMode;
        var component = (EcoFarm.EditModeComponent)CreateComponent(index, typeof(EcoFarm.EditModeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEditMode() {
        RemoveComponent(PlayerComponentsLookup.EditMode);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherEditMode;

    public static Entitas.IMatcher<PlayerEntity> EditMode {
        get {
            if (_matcherEditMode == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.EditMode);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherEditMode = matcher;
            }

            return _matcherEditMode;
        }
    }
}
