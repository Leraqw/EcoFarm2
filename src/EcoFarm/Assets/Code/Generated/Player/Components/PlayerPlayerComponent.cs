//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public PlayerComponent player { get { return (PlayerComponent)GetComponent(PlayerComponentsLookup.Player); } }
    public bool hasPlayer { get { return HasComponent(PlayerComponentsLookup.Player); } }

    public void AddPlayer(Code.PlayerComponent newValue) {
        var index = PlayerComponentsLookup.Player;
        var component = (PlayerComponent)CreateComponent(index, typeof(PlayerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayer(Code.PlayerComponent newValue) {
        var index = PlayerComponentsLookup.Player;
        var component = (PlayerComponent)CreateComponent(index, typeof(PlayerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayer() {
        RemoveComponent(PlayerComponentsLookup.Player);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherPlayer;

    public static Entitas.IMatcher<PlayerEntity> Player {
        get {
            if (_matcherPlayer == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.Player);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherPlayer = matcher;
            }

            return _matcherPlayer;
        }
    }
}
