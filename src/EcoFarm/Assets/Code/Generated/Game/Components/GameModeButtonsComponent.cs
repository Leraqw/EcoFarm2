//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EcoFarm.ModeButtonsComponent modeButtons { get { return (EcoFarm.ModeButtonsComponent)GetComponent(GameComponentsLookup.ModeButtons); } }
    public bool hasModeButtons { get { return HasComponent(GameComponentsLookup.ModeButtons); } }

    public void AddModeButtons(EcoFarm.EnabledReceivers newEnabled, UnityEngine.UI.ColorBlock newColor) {
        var index = GameComponentsLookup.ModeButtons;
        var component = (EcoFarm.ModeButtonsComponent)CreateComponent(index, typeof(EcoFarm.ModeButtonsComponent));
        component.Enabled = newEnabled;
        component.Color = newColor;
        AddComponent(index, component);
    }

    public void ReplaceModeButtons(EcoFarm.EnabledReceivers newEnabled, UnityEngine.UI.ColorBlock newColor) {
        var index = GameComponentsLookup.ModeButtons;
        var component = (EcoFarm.ModeButtonsComponent)CreateComponent(index, typeof(EcoFarm.ModeButtonsComponent));
        component.Enabled = newEnabled;
        component.Color = newColor;
        ReplaceComponent(index, component);
    }

    public void RemoveModeButtons() {
        RemoveComponent(GameComponentsLookup.ModeButtons);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherModeButtons;

    public static Entitas.IMatcher<GameEntity> ModeButtons {
        get {
            if (_matcherModeButtons == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ModeButtons);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherModeButtons = matcher;
            }

            return _matcherModeButtons;
        }
    }
}
