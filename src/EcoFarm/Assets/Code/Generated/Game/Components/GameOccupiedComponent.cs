//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public OccupiedComponent occupied { get { return (OccupiedComponent)GetComponent(GameComponentsLookup.Occupied); } }
    public bool hasOccupied { get { return HasComponent(GameComponentsLookup.Occupied); } }

    public void AddOccupied(Code.OccupiedComponent newValue) {
        var index = GameComponentsLookup.Occupied;
        var component = (OccupiedComponent)CreateComponent(index, typeof(OccupiedComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceOccupied(Code.OccupiedComponent newValue) {
        var index = GameComponentsLookup.Occupied;
        var component = (OccupiedComponent)CreateComponent(index, typeof(OccupiedComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveOccupied() {
        RemoveComponent(GameComponentsLookup.Occupied);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOccupied;

    public static Entitas.IMatcher<GameEntity> Occupied {
        get {
            if (_matcherOccupied == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Occupied);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOccupied = matcher;
            }

            return _matcherOccupied;
        }
    }
}
