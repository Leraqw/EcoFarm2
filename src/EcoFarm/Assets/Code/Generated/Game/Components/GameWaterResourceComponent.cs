//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity waterResourceEntity { get { return GetGroup(GameMatcher.WaterResource).GetSingleEntity(); } }
    public WaterResourceComponent waterResource { get { return waterResourceEntity.waterResource; } }
    public bool hasWaterResource { get { return waterResourceEntity != null; } }

    public GameEntity SetWaterResource(Code.WaterResourceComponent newValue) {
        if (hasWaterResource) {
            throw new Entitas.EntitasException("Could not set WaterResource!\n" + this + " already has an entity with WaterResourceComponent!",
                "You should check if the context already has a waterResourceEntity before setting it or use context.ReplaceWaterResource().");
        }
        var entity = CreateEntity();
        entity.AddWaterResource(newValue);
        return entity;
    }

    public void ReplaceWaterResource(Code.WaterResourceComponent newValue) {
        var entity = waterResourceEntity;
        if (entity == null) {
            entity = SetWaterResource(newValue);
        } else {
            entity.ReplaceWaterResource(newValue);
        }
    }

    public void RemoveWaterResource() {
        waterResourceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WaterResourceComponent waterResource { get { return (WaterResourceComponent)GetComponent(GameComponentsLookup.WaterResource); } }
    public bool hasWaterResource { get { return HasComponent(GameComponentsLookup.WaterResource); } }

    public void AddWaterResource(Code.WaterResourceComponent newValue) {
        var index = GameComponentsLookup.WaterResource;
        var component = (WaterResourceComponent)CreateComponent(index, typeof(WaterResourceComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWaterResource(Code.WaterResourceComponent newValue) {
        var index = GameComponentsLookup.WaterResource;
        var component = (WaterResourceComponent)CreateComponent(index, typeof(WaterResourceComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWaterResource() {
        RemoveComponent(GameComponentsLookup.WaterResource);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWaterResource;

    public static Entitas.IMatcher<GameEntity> WaterResource {
        get {
            if (_matcherWaterResource == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WaterResource);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWaterResource = matcher;
            }

            return _matcherWaterResource;
        }
    }
}
