//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Components.BuildPositionComponent buildPosition { get { return (Code.ECS.Components.BuildPositionComponent)GetComponent(GameComponentsLookup.BuildPosition); } }
    public bool hasBuildPosition { get { return HasComponent(GameComponentsLookup.BuildPosition); } }

    public void AddBuildPosition(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.BuildPosition;
        var component = (Code.ECS.Components.BuildPositionComponent)CreateComponent(index, typeof(Code.ECS.Components.BuildPositionComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBuildPosition(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.BuildPosition;
        var component = (Code.ECS.Components.BuildPositionComponent)CreateComponent(index, typeof(Code.ECS.Components.BuildPositionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBuildPosition() {
        RemoveComponent(GameComponentsLookup.BuildPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBuildPosition;

    public static Entitas.IMatcher<GameEntity> BuildPosition {
        get {
            if (_matcherBuildPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BuildPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBuildPosition = matcher;
            }

            return _matcherBuildPosition;
        }
    }
}
