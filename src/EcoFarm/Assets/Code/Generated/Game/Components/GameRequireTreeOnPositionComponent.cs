//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EcoFarm.RequireTreeOnPositionComponent requireTreeOnPosition { get { return (EcoFarm.RequireTreeOnPositionComponent)GetComponent(GameComponentsLookup.RequireTreeOnPosition); } }
    public bool hasRequireTreeOnPosition { get { return HasComponent(GameComponentsLookup.RequireTreeOnPosition); } }

    public void AddRequireTreeOnPosition(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.RequireTreeOnPosition;
        var component = (EcoFarm.RequireTreeOnPositionComponent)CreateComponent(index, typeof(EcoFarm.RequireTreeOnPositionComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRequireTreeOnPosition(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.RequireTreeOnPosition;
        var component = (EcoFarm.RequireTreeOnPositionComponent)CreateComponent(index, typeof(EcoFarm.RequireTreeOnPositionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRequireTreeOnPosition() {
        RemoveComponent(GameComponentsLookup.RequireTreeOnPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRequireTreeOnPosition;

    public static Entitas.IMatcher<GameEntity> RequireTreeOnPosition {
        get {
            if (_matcherRequireTreeOnPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RequireTreeOnPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRequireTreeOnPosition = matcher;
            }

            return _matcherRequireTreeOnPosition;
        }
    }
}
