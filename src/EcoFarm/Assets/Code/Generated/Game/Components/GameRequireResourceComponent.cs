//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Components.RequireResourceComponent requireResource { get { return (Code.ECS.Components.RequireResourceComponent)GetComponent(GameComponentsLookup.RequireResource); } }
    public bool hasRequireResource { get { return HasComponent(GameComponentsLookup.RequireResource); } }

    public void AddRequireResource(string newValue) {
        var index = GameComponentsLookup.RequireResource;
        var component = (Code.ECS.Components.RequireResourceComponent)CreateComponent(index, typeof(Code.ECS.Components.RequireResourceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRequireResource(string newValue) {
        var index = GameComponentsLookup.RequireResource;
        var component = (Code.ECS.Components.RequireResourceComponent)CreateComponent(index, typeof(Code.ECS.Components.RequireResourceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRequireResource() {
        RemoveComponent(GameComponentsLookup.RequireResource);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRequireResource;

    public static Entitas.IMatcher<GameEntity> RequireResource {
        get {
            if (_matcherRequireResource == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RequireResource);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRequireResource = matcher;
            }

            return _matcherRequireResource;
        }
    }
}
