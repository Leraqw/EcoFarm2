//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EcoFarm.PlayerToChooseComponent playerToChoose { get { return (EcoFarm.PlayerToChooseComponent)GetComponent(GameComponentsLookup.PlayerToChoose); } }
    public bool hasPlayerToChoose { get { return HasComponent(GameComponentsLookup.PlayerToChoose); } }

    public void AddPlayerToChoose(EcoFarm.Player newValue) {
        var index = GameComponentsLookup.PlayerToChoose;
        var component = (EcoFarm.PlayerToChooseComponent)CreateComponent(index, typeof(EcoFarm.PlayerToChooseComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerToChoose(EcoFarm.Player newValue) {
        var index = GameComponentsLookup.PlayerToChoose;
        var component = (EcoFarm.PlayerToChooseComponent)CreateComponent(index, typeof(EcoFarm.PlayerToChooseComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerToChoose() {
        RemoveComponent(GameComponentsLookup.PlayerToChoose);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerToChoose;

    public static Entitas.IMatcher<GameEntity> PlayerToChoose {
        get {
            if (_matcherPlayerToChoose == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerToChoose);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerToChoose = matcher;
            }

            return _matcherPlayerToChoose;
        }
    }
}
