//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ModalWindowListenerComponent modalWindowListener { get { return (ModalWindowListenerComponent)GetComponent(GameComponentsLookup.ModalWindowListener); } }
    public bool hasModalWindowListener { get { return HasComponent(GameComponentsLookup.ModalWindowListener); } }

    public void AddModalWindowListener(System.Collections.Generic.List<IModalWindowListener> newValue) {
        var index = GameComponentsLookup.ModalWindowListener;
        var component = (ModalWindowListenerComponent)CreateComponent(index, typeof(ModalWindowListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceModalWindowListener(System.Collections.Generic.List<IModalWindowListener> newValue) {
        var index = GameComponentsLookup.ModalWindowListener;
        var component = (ModalWindowListenerComponent)CreateComponent(index, typeof(ModalWindowListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveModalWindowListener() {
        RemoveComponent(GameComponentsLookup.ModalWindowListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherModalWindowListener;

    public static Entitas.IMatcher<GameEntity> ModalWindowListener {
        get {
            if (_matcherModalWindowListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ModalWindowListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherModalWindowListener = matcher;
            }

            return _matcherModalWindowListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddModalWindowListener(IModalWindowListener value) {
        var listeners = hasModalWindowListener
            ? modalWindowListener.value
            : new System.Collections.Generic.List<IModalWindowListener>();
        listeners.Add(value);
        ReplaceModalWindowListener(listeners);
    }

    public void RemoveModalWindowListener(IModalWindowListener value, bool removeComponentWhenEmpty = true) {
        var listeners = modalWindowListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveModalWindowListener();
        } else {
            ReplaceModalWindowListener(listeners);
        }
    }
}
