//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InFactoryComponent inFactory { get { return (InFactoryComponent)GetComponent(GameComponentsLookup.InFactory); } }
    public bool hasInFactory { get { return HasComponent(GameComponentsLookup.InFactory); } }

    public void AddInFactory(Code.InFactoryComponent newValue) {
        var index = GameComponentsLookup.InFactory;
        var component = (InFactoryComponent)CreateComponent(index, typeof(InFactoryComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInFactory(Code.InFactoryComponent newValue) {
        var index = GameComponentsLookup.InFactory;
        var component = (InFactoryComponent)CreateComponent(index, typeof(InFactoryComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInFactory() {
        RemoveComponent(GameComponentsLookup.InFactory);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInFactory;

    public static Entitas.IMatcher<GameEntity> InFactory {
        get {
            if (_matcherInFactory == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InFactory);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInFactory = matcher;
            }

            return _matcherInFactory;
        }
    }
}
