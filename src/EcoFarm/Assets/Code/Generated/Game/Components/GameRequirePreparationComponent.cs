//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RequirePreparationComponent requirePreparation { get { return (RequirePreparationComponent)GetComponent(GameComponentsLookup.RequirePreparation); } }
    public bool hasRequirePreparation { get { return HasComponent(GameComponentsLookup.RequirePreparation); } }

    public void AddRequirePreparation(Code.RequirePreparationComponent newValue) {
        var index = GameComponentsLookup.RequirePreparation;
        var component = (RequirePreparationComponent)CreateComponent(index, typeof(RequirePreparationComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRequirePreparation(Code.RequirePreparationComponent newValue) {
        var index = GameComponentsLookup.RequirePreparation;
        var component = (RequirePreparationComponent)CreateComponent(index, typeof(RequirePreparationComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRequirePreparation() {
        RemoveComponent(GameComponentsLookup.RequirePreparation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRequirePreparation;

    public static Entitas.IMatcher<GameEntity> RequirePreparation {
        get {
            if (_matcherRequirePreparation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RequirePreparation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRequirePreparation = matcher;
            }

            return _matcherRequirePreparation;
        }
    }
}
