//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EcoFarm.PlayerWindowContentComponent playerWindowContent { get { return (EcoFarm.PlayerWindowContentComponent)GetComponent(GameComponentsLookup.PlayerWindowContent); } }
    public bool hasPlayerWindowContent { get { return HasComponent(GameComponentsLookup.PlayerWindowContent); } }

    public void AddPlayerWindowContent(UnityEngine.RectTransform newValue) {
        var index = GameComponentsLookup.PlayerWindowContent;
        var component = (EcoFarm.PlayerWindowContentComponent)CreateComponent(index, typeof(EcoFarm.PlayerWindowContentComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerWindowContent(UnityEngine.RectTransform newValue) {
        var index = GameComponentsLookup.PlayerWindowContent;
        var component = (EcoFarm.PlayerWindowContentComponent)CreateComponent(index, typeof(EcoFarm.PlayerWindowContentComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerWindowContent() {
        RemoveComponent(GameComponentsLookup.PlayerWindowContent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerWindowContent;

    public static Entitas.IMatcher<GameEntity> PlayerWindowContent {
        get {
            if (_matcherPlayerWindowContent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerWindowContent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerWindowContent = matcher;
            }

            return _matcherPlayerWindowContent;
        }
    }
}
