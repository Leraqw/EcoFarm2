//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PickableComponent pickable { get { return (PickableComponent)GetComponent(GameComponentsLookup.Pickable); } }
    public bool hasPickable { get { return HasComponent(GameComponentsLookup.Pickable); } }

    public void AddPickable(Code.PickableComponent newValue) {
        var index = GameComponentsLookup.Pickable;
        var component = (PickableComponent)CreateComponent(index, typeof(PickableComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePickable(Code.PickableComponent newValue) {
        var index = GameComponentsLookup.Pickable;
        var component = (PickableComponent)CreateComponent(index, typeof(PickableComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePickable() {
        RemoveComponent(GameComponentsLookup.Pickable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPickable;

    public static Entitas.IMatcher<GameEntity> Pickable {
        get {
            if (_matcherPickable == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Pickable);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPickable = matcher;
            }

            return _matcherPickable;
        }
    }
}
