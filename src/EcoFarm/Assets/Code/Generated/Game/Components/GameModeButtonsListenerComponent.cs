//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ModeButtonsListenerComponent modeButtonsListener { get { return (ModeButtonsListenerComponent)GetComponent(GameComponentsLookup.ModeButtonsListener); } }
    public bool hasModeButtonsListener { get { return HasComponent(GameComponentsLookup.ModeButtonsListener); } }

    public void AddModeButtonsListener(System.Collections.Generic.List<IModeButtonsListener> newValue) {
        var index = GameComponentsLookup.ModeButtonsListener;
        var component = (ModeButtonsListenerComponent)CreateComponent(index, typeof(ModeButtonsListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceModeButtonsListener(System.Collections.Generic.List<IModeButtonsListener> newValue) {
        var index = GameComponentsLookup.ModeButtonsListener;
        var component = (ModeButtonsListenerComponent)CreateComponent(index, typeof(ModeButtonsListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveModeButtonsListener() {
        RemoveComponent(GameComponentsLookup.ModeButtonsListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherModeButtonsListener;

    public static Entitas.IMatcher<GameEntity> ModeButtonsListener {
        get {
            if (_matcherModeButtonsListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ModeButtonsListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherModeButtonsListener = matcher;
            }

            return _matcherModeButtonsListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddModeButtonsListener(IModeButtonsListener value) {
        var listeners = hasModeButtonsListener
            ? modeButtonsListener.value
            : new System.Collections.Generic.List<IModeButtonsListener>();
        listeners.Add(value);
        ReplaceModeButtonsListener(listeners);
    }

    public void RemoveModeButtonsListener(IModeButtonsListener value, bool removeComponentWhenEmpty = true) {
        var listeners = modeButtonsListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveModeButtonsListener();
        } else {
            ReplaceModeButtonsListener(listeners);
        }
    }
}
