//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Components.AttachTargetComponent attachTarget { get { return (Code.ECS.Components.AttachTargetComponent)GetComponent(GameComponentsLookup.AttachTarget); } }
    public bool hasAttachTarget { get { return HasComponent(GameComponentsLookup.AttachTarget); } }

    public void AddAttachTarget(int newValue) {
        var index = GameComponentsLookup.AttachTarget;
        var component = (Code.ECS.Components.AttachTargetComponent)CreateComponent(index, typeof(Code.ECS.Components.AttachTargetComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAttachTarget(int newValue) {
        var index = GameComponentsLookup.AttachTarget;
        var component = (Code.ECS.Components.AttachTargetComponent)CreateComponent(index, typeof(Code.ECS.Components.AttachTargetComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttachTarget() {
        RemoveComponent(GameComponentsLookup.AttachTarget);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttachTarget;

    public static Entitas.IMatcher<GameEntity> AttachTarget {
        get {
            if (_matcherAttachTarget == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttachTarget);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttachTarget = matcher;
            }

            return _matcherAttachTarget;
        }
    }
}
