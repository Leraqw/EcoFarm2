//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FactoryListenerComponent factoryListener { get { return (FactoryListenerComponent)GetComponent(GameComponentsLookup.FactoryListener); } }
    public bool hasFactoryListener { get { return HasComponent(GameComponentsLookup.FactoryListener); } }

    public void AddFactoryListener(System.Collections.Generic.List<IFactoryListener> newValue) {
        var index = GameComponentsLookup.FactoryListener;
        var component = (FactoryListenerComponent)CreateComponent(index, typeof(FactoryListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFactoryListener(System.Collections.Generic.List<IFactoryListener> newValue) {
        var index = GameComponentsLookup.FactoryListener;
        var component = (FactoryListenerComponent)CreateComponent(index, typeof(FactoryListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFactoryListener() {
        RemoveComponent(GameComponentsLookup.FactoryListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFactoryListener;

    public static Entitas.IMatcher<GameEntity> FactoryListener {
        get {
            if (_matcherFactoryListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FactoryListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFactoryListener = matcher;
            }

            return _matcherFactoryListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddFactoryListener(IFactoryListener value) {
        var listeners = hasFactoryListener
            ? factoryListener.value
            : new System.Collections.Generic.List<IFactoryListener>();
        listeners.Add(value);
        ReplaceFactoryListener(listeners);
    }

    public void RemoveFactoryListener(IFactoryListener value, bool removeComponentWhenEmpty = true) {
        var listeners = factoryListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFactoryListener();
        } else {
            ReplaceFactoryListener(listeners);
        }
    }
}
