//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Components.FallingComponent falling { get { return (Code.ECS.Components.FallingComponent)GetComponent(GameComponentsLookup.Falling); } }
    public bool hasFalling { get { return HasComponent(GameComponentsLookup.Falling); } }

    public void AddFalling(Code.Utils.Common.Vector3Interval newValue) {
        var index = GameComponentsLookup.Falling;
        var component = (Code.ECS.Components.FallingComponent)CreateComponent(index, typeof(Code.ECS.Components.FallingComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFalling(Code.Utils.Common.Vector3Interval newValue) {
        var index = GameComponentsLookup.Falling;
        var component = (Code.ECS.Components.FallingComponent)CreateComponent(index, typeof(Code.ECS.Components.FallingComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFalling() {
        RemoveComponent(GameComponentsLookup.Falling);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFalling;

    public static Entitas.IMatcher<GameEntity> Falling {
        get {
            if (_matcherFalling == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Falling);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFalling = matcher;
            }

            return _matcherFalling;
        }
    }
}
