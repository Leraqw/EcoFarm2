//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WateredComponent watered { get { return (WateredComponent)GetComponent(GameComponentsLookup.Watered); } }
    public bool hasWatered { get { return HasComponent(GameComponentsLookup.Watered); } }

    public void AddWatered(Code.WateredComponent newValue) {
        var index = GameComponentsLookup.Watered;
        var component = (WateredComponent)CreateComponent(index, typeof(WateredComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWatered(Code.WateredComponent newValue) {
        var index = GameComponentsLookup.Watered;
        var component = (WateredComponent)CreateComponent(index, typeof(WateredComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWatered() {
        RemoveComponent(GameComponentsLookup.Watered);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWatered;

    public static Entitas.IMatcher<GameEntity> Watered {
        get {
            if (_matcherWatered == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Watered);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWatered = matcher;
            }

            return _matcherWatered;
        }
    }
}
